# .github/workflows/deploy-pages.yml
name: Deploy static site (Yarn workspaces) to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  # Path to the Vite example app that produces the static site
  SITE_DIR: packages/filter-builder-react/examples/dev
  DIST_DIR: packages/filter-builder-react/examples/dev/dist

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      # Install Yarn classic (v1) explicitly to match your engines
      - name: Install Yarn 1.x
        run: npm i -g yarn@1.22.22

      - name: Show tool versions
        run: |
          node -v
          npm -v
          yarn -v

      - name: Install dependencies (workspaces)
        run: yarn install --frozen-lockfile

      - name: Compute repo name (for canonical/base replacements)
        id: repo
        shell: bash
        run: |
          REPO="${GITHUB_REPOSITORY#*/}"
          echo "name=$REPO" >> "$GITHUB_OUTPUT"
          echo "Repo name: $REPO"

      - name: Replace REPO_NAME placeholders in site sources (optional)
        shell: bash
        run: |
          set -euo pipefail
          REPO="${{ steps.repo.outputs.name }}"
          for f in \
            "$SITE_DIR/index.html" \
            "$SITE_DIR/public/index.html" \
            "$SITE_DIR/public/robots.txt" \
            "$SITE_DIR/public/sitemap.xml"
          do
            if [ -f "$f" ]; then
              sed -i "s|REPO_NAME|${REPO}|g" "$f" || true
            fi
          done

      - name: Build via root script (yarn gh:release)
        run: yarn gh:release

      - name: Ensure .nojekyll and optional CNAME in dist
        run: |
          mkdir -p "$DIST_DIR"
          cp -f .nojekyll "$DIST_DIR/.nojekyll" 2>/dev/null || : 
          if [ -f CNAME ]; then cp -f CNAME "$DIST_DIR/CNAME"; fi
          if [ -f "$SITE_DIR/public/CNAME" ]; then cp -f "$SITE_DIR/public/CNAME" "$DIST_DIR/CNAME"; fi

      - name: Verify build output
        run: |
          if [ ! -d "$DIST_DIR" ]; then
            echo "‚ùå Dist folder not found at $DIST_DIR"
            exit 1
          fi
          ls -la "$DIST_DIR"

      - name: Upload artifact to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.DIST_DIR }}

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        name: Deploy
        uses: actions/deploy-pages@v4
